@page "/join"
@inject NavigationManager nav
@using Logic.Session
@using Logic.Game

<PageTitle>Carothar - Join</PageTitle>

<div>@key</div>

@if (loaded && (session is not null)) {
    <ul>
        @foreach(string charKey in session.Characters.Keys.ToList()) {
            <li>
                <button @onclick="() => playAsCharacter(session.Characters[charKey])">Join</button>
                @session.Characters[charKey].Name (@session.Characters[charKey].PlayerName)
            </li>
        }
        <li><button @onclick="addCharacter">Add Character & Continue</button></li>
    </ul>
} else if (loaded) {
    <p>Invalid key</p>
} else {
    <p>Loading...</p>
}

@code {
    bool loaded = false;
    bool addCharacterToggle = false;

    string characterName;

    Session? session;
    PlayerStats characterData;

    [SupplyParameterFromQuery]
    public string key { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        session = SessionManager.Instance.GetSessionFromKey(key);
        loaded = true;
        InvokeAsync(StateHasChanged);
    }

    void addCharacter()
    {
        nav.NavigateTo($"/create?key={session.Key}");
    }

    void playAsCharacter(PlayerStats character)
    {
        nav.NavigateTo($"/play?key={session.Key}&chardata={character.Key}");
    }
}
